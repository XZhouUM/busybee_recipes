#!/bin/bash
set -e

# Initialize flags
PYTHON_FILES_CHANGED=false
RECIPE_FILES_CHANGED=false

# Get all refs passed to pre-push
while read local_ref local_sha remote_ref remote_sha; do

  if [ "$remote_sha" = "0000000000000000000000000000000000000000" ]; then
    echo "First push of new branch detected."

    # Only get tracked files that are staged for commit
    CHANGED_PYTHON_FILES=$(git diff --name-only --cached --diff-filter=ACM '*.py')
    CHANGED_RECIPE_FILES=$(git diff --name-only --cached --diff-filter=ACM '*.md')

  elif [ "$local_sha" = "$remote_sha" ]; then
    echo "No new commits to push."
    exit 0
  else
    # Normal push â€” diff between remote and local
    CHANGED_PYTHON_FILES=$(git diff --name-only "$remote_sha" "$local_sha" --diff-filter=ACM -- '*.py')
    CHANGED_RECIPE_FILES=$(git diff --name-only "$remote_sha" "$local_sha" --diff-filter=ACM -- '*.md')
  fi

  # Run checks only if Python files changed
  if [ -n "$CHANGED_PYTHON_FILES" ]; then
    PYTHON_FILES_CHANGED=true
    echo "Running code checks on Python files:"
    echo "$CHANGED_PYTHON_FILES"

    black $CHANGED_PYTHON_FILES --line-length 88
    isort $CHANGED_PYTHON_FILES
    flake8 $CHANGED_PYTHON_FILES --max-line-length=88 --ignore=E501,W503
    pytype $CHANGED_PYTHON_FILES
  fi

  # Run recipe sorting if recipe files changed
  if [ -n "$CHANGED_RECIPE_FILES" ]; then
    RECIPE_FILES_CHANGED=true
    echo "Recipe files changed:"
    echo "$CHANGED_RECIPE_FILES"
    python3 tools/sort_recipes_by_cooking_time.py --verbose 1
  fi

done
