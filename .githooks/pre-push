#!/bin/bash

# stop if anything fails
set -e

# Initialize flags
PYTHON_FILES_CHANGED=false
RECIPE_FILES_CHANGED=false

# Read local and remote refs from stdin (Git passes them to pre-push)
while read local_ref local_sha remote_ref remote_sha; do

  # First push of a new branch
  if [ "$remote_sha" = "0000000000000000000000000000000000000000" ]; then
    echo "Remote branch does not exist yet — first push detected."
    # Get all Python files in local commits (since branch creation)
    CHANGED_PYTHON_FILES=$(git diff --name-only --cached -- '*.py')
    # Get all recipe files in local commits
    CHANGED_RECIPE_FILES=$(git diff --name-only --cached -- '*.md')
  elif [ "$local_sha" = "$remote_sha" ]; then
    echo "No new commits to push."
    exit 0
  else
    # Normal push — diff between remote and local
    CHANGED_PYTHON_FILES=$(git diff --name-only "$remote_sha" "$local_sha" -- '*.py')
    CHANGED_RECIPE_FILES=$(git diff --name-only "$remote_sha" "$local_sha" -- '*.md')
  fi

  # If any Python files changed, format them
  if [ -n "$CHANGED_PYTHON_FILES" ]; then
    PYTHON_FILES_CHANGED=true
    echo "Running code checks on Python files:"
    echo "$CHANGED_PYTHON_FILES"

    # Run Black (formatting)
    black $CHANGED_PYTHON_FILES --line-length 88

    # Run isort (imports)
    isort $CHANGED_PYTHON_FILES

    # Run Flake8 (linting) but some errors are ignored
    flake8 $CHANGED_PYTHON_FILES --max-line-length=88 --ignore=E501,W503

    # Run pytype (static type checking)
    pytype $CHANGED_PYTHON_FILES
  fi
done

# Sort recipes by cooking time
echo "Running sort_recipes_by_cooking_time.py before push..."
    # Run Flake8 (linting)
    flake8 $CHANGED_PYTHON_FILES

    # Run pytype (static type checking)
    pytype $CHANGED_PYTHON_FILES
  fi

  # If any recipe files changed, run the sorting script
  if [ -n "$CHANGED_RECIPE_FILES" ]; then
    RECIPE_FILES_CHANGED=true
    echo "Recipe files changed:"
    echo "$CHANGED_RECIPE_FILES"

    # Run the sorting script with error handling
    python3 tools/sort_recipes_by_cooking_time.py --verbose 1
  fi

done